Method,Description,Worst-case,Optimal
`is_empty() <linked_list.html#extra.lists.linked_list.LinkedList.is_empty>`_,Checks if the linked list is empty.,O(1),O(1)
`__len__() <linked_list.html#extra.lists.linked_list.LinkedList.__len_\_>`_,Returns the number of nodes in the linked list.,O(1),O(1)
`__repr__() <linked_list.html#extra.lists.linked_list.LinkedList.__repr_\_>`_,Represents the linked list as a string.,O(n),O(n)
`__iters__() <linked_list.html#extra.lists.linked_list.LinkedList.__iters_\_>`_,Iterates over the linked list instance.,O(n),O(n)
`__eq__() <linked_list.html#extra.lists.linked_list.LinkedList.__eq_\_>`_,Checks the items equality of the two linked lists.,O(min(n;m)),O(min(n;m))
`__ne__() <linked_list.html#extra.lists.linked_list.LinkedList.__ne_\_>`_,Checks the items inequality of the two linked lists.,O(min(n;m)),O(min(n;m))
`__lt__() <linked_list.html#extra.lists.linked_list.LinkedList.__lt_\_>`_,Checks if the linked list is less than the other.,O(min(n;m)),O(min(n;m))
`__le__() <linked_list.html#extra.lists.linked_list.LinkedList.__le_\_>`_,Checks if the list is less than or equal the other.,O(min(n;m)),O(min(n;m))
`__gt__() <linked_list.html#extra.lists.linked_list.LinkedList.__gt_\_>`_,Checks if the linked list is greater than the other.,O(min(n;m)),O(min(n;m))
`__ge__() <linked_list.html#extra.lists.linked_list.LinkedList.__ge_\_>`_,Checks if the list is greater than or equal the other.,O(min(n;m)),O(min(n;m))
`__contains__() <linked_list.html#extra.lists.linked_list.LinkedList.__contains_\_>`_,Checks the existence of the given item in the list,O(n),O(n)
`__getitem__() <linked_list.html#extra.lists.linked_list.LinkedList.__getitem_\_>`_,Returns the element at the given index.,O(k),O(k)
`add_front() <linked_list.html#extra.lists.linked_list.LinkedList.add_front>`_,Adds the given item at the head of the linked list.,O(1),O(1)
`add_end() <linked_list.html#extra.lists.linked_list.LinkedList.add_end>`_,Adds the given item at the tail of the linked list.,O(n),O(n)
`insert() <linked_list.html#extra.lists.linked_list.LinkedList.insert>`_,Adds the given item at the given index.,O(k),O(k)
`__setitem__() <linked_list.html#extra.lists.linked_list.LinkedList.__setitem_\_>`_,Replaces the value at the given index with given value.,O(k),O(k)
`__delitem__() <linked_list.html#extra.lists.linked_list.LinkedList.__delitem_\_>`_,Deletes the value at the given index.,O(n),O(n)
`remove_front() <linked_list.html#extra.lists.linked_list.LinkedList.remove_front>`_,Removes the node at the head of the linked list.,O(1),O(1)
`remove_end() <linked_list.html#extra.lists.linked_list.LinkedList.remove_end>`_,Removes the node at the tail of the linked list.,O(n),O(n)
`remove() <linked_list.html#extra.lists.linked_list.LinkedList.remove>`_,Removes the given value from the linked list if found.,O(n),O(n)
`clear() <linked_list.html#extra.lists.linked_list.LinkedList.clear>`_,Clears the whole linked list.,O(1),O(1)
`split() <linked_list.html#extra.lists.linked_list.LinkedList.split>`_,Splits the linked list into two at the given index.,O(n),O(n)
`extend() <linked_list.html#extra.lists.linked_list.LinkedList.extend>`_,Extends the linked list using another linked list.,O(n),O(n)
`rotate_left() <linked_list.html#extra.lists.linked_list.LinkedList.rotate_left>`_,Left-rotates the linked list a given number of times.,O(k%n),O(k%n)
`rotate_right() <linked_list.html#extra.lists.linked_list.LinkedList.rotate_right>`_,Right-rotates the linked list a given number of times. ,O(k%n),O(k%n)
`reverse() <linked_list.html#extra.lists.linked_list.LinkedList.reverse>`_,Reverses the linked list.,O(n),O(n)
`to_list() <linked_list.html#extra.lists.linked_list.LinkedList.to_list>`_,Converts the linked list to a normal list.,O(n),O(n)
`count() <linked_list.html#extra.lists.linked_list.LinkedList.count>`_,Counts the occurrences of the given value in the list.,O(n), O(n)
`copy() <linked_list.html#extra.lists.linked_list.LinkedList.copy>`_,Shallow-copies the linked list.,O(n),O(n)
