Method,Description,Worst-case,Optimal
`is_empty() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.is_empty>`_,Checks if the red-black tree is empty.,O(1),O(1)
`__len__() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.__len_\_>`_,Returns the number of nodes in the red-black tree.,O(1),O(1)
`__repr__() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.__repr_\_>`_,Represents the red-black tree.,O(n),O(n)
`__iter__() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.__iter_\_>`_,Iterates over the red-black tree.,O(n),O(n)
`__contains__() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.__contains_\_>`_,Checks the existence of the given item.,O(h),O(h)
`get_height() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.get_height>`_,Gets the red-black tree's height.,O(h),O(1)
`get_black_height() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.get_black_height>`_,Gets the red-black tree's black height.,O(h),O(1)
`get_depth() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.get_depth>`_,Gets the red-black tree's depth.,O(h),O(1)
`get_nodes_per_level() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.get_nodes_per_level>`_,Returns a list of all nodes per level.,O(n),O(n)
`is_balanced() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.is_balanced>`_,Checks if the red-black tree is balanced.,O(n),O(1)
`is_perfect() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.is_perfect>`_,Checks if the red-black tree is perfect.,O(n),O(1)
`is_strict() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.is_strict>`_,Checks if the red-black tree is strict.,O(n),O(1)
`count_leaf_nodes() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.count_leaf_nodes>`_,Counts all leaf nodes in the red-black tree.,O(n),O(n)
`clear() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.clear>`_,Clears the whole red-black tree instance.,O(1),O(1)
`to_list() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.to_list>`_,Converts the red-black tree instance to list.,O(n),O(n)
`traverse() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.traverse>`_,Traverses red-black tree based on given method.,O(n),O(n)
`preorder_traverse() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.preorder_traverse>`_,Traverses red-black tree in an pre-order manner.,O(n),O(n)
`inorder_traverse() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.inorder_traverse>`_,Traverses red-black tree in an in-order manner.,O(n),O(n)
`postorder_traverse() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.postorder_traverse>`_,Traverses red-black tree in an post-order manner.,O(n),O(n)
`breadth_first_traverse() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.breadth_first_traverse>`_,Traverses the red-black tree level by level.,O(n),O(n)
`depth_first_traverse() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.depth_first_traverse>`_,Traverses red-black tree in an pre-order manner.,O(n),O(n)
`get_min() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.get_min>`_,Gets the minimum number in the red-black tree.,O(h),O(h)
`get_max() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.get_max>`_,Gets the maximum number in the red-black tree.,O(h),O(h)
`insert() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.insert>`_,Inserts a certain value to the red-black tree.,O(h),O(h)
`remove() <red_black_tree.html#extra.trees.red_black_tree.RedBlackTree.remove>`_,Removes a certain value from the red-black tree.,O(h),O(h)
