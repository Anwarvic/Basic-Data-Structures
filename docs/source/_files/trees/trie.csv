Method,Description,Worst-case,Optimal
`is_empty() <trie.html#extra.trees.trie.Trie.is_empty>`_,Checks if the trie is empty.,O(1),O(1)
`__len__() <trie.html#extra.trees.trie.Trie.__len_\_>`_,Returns the number of nodes in the trie.,O(n),O(1)
`__repr__() <trie.html#extra.trees.trie.Trie.__repr_\_>`_,Represents the trie as a string.,O(n),O(n)
`__iter__() <trie.html#extra.trees.trie.Trie.__iter_\_>`_,Iterates over the trie.,O(n),O(n)
`__contains__() <trie.html#extra.trees.trie.Trie.__contains_\_>`_,Checks the existence of the given item.,O(m),O(1)
`get_height() <trie.html#extra.trees.trie.Trie.get_height>`_,Gets the trie's height.,O(n),O(n)
`get_depth() <trie.html#extra.trees.trie.Trie.get_depth>`_,Gets the trie's depth.,O(1),O(1)
`get_nodes_per_level() <trie.html#extra.trees.trie.Trie.get_nodes_per_level>`_,Returns a list of all nodes per level.,O(n),O(n)
`count_leaf_nodes() <trie.html#extra.trees.trie.Trie.count_leaf_nodes>`_,Counts all leaf nodss in the trie.,O(n),O(n)
`clear() <trie.html#extra.trees.trie.Trie.clear>`_,Clears the whole trie instance.,O(1),O(1)
`to_list() <trie.html#extra.trees.trie.Trie.to_list>`_,Converts the trie instance to  list.,O(n),O(n)
`auto_complete() <trie.html#extra.trees.trie.Trie.auto_complete>`_,Autocompletes a substring from the trie.,O(m),O(m)
`insert() <trie.html#extra.trees.trie.Trie.insert>`_,Inserts a new word to the trie.,O(m),O(m)
`remove() <trie.html#extra.trees.trie.Trie.remove>`_,Removes a word from the trie.,O(m),O(m)
