Method,Description,Worst-case,Optimal
`is_empty() <min_heap.html#extra.trees.min_heap.MinHeap.is_empty>`_,Checks if the Min Heap is empty.,O(1),O(1)
`__len__() <min_heap.html#extra.trees.min_heap.MinHeap.__len_\_>`_,Returns the number of nodes in the Min Heap.,O(1),O(1)
`__repr__() <min_heap.html#extra.trees.min_heap.MinHeap.__repr_\_>`_,Represents the Min Heap as a string.,O(n),O(n)
`__iter__() <min_heap.html#extra.trees.min_heap.MinHeap.__iter_\_>`_,Iterates over the Min Heap.,O(n),O(n)
`__contains__() <min_heap.html#extra.trees.min_heap.MinHeap.__contains_\_>`_,Checks the existence of the given item.,O(n),O(n)
`clear() <min_heap.html#extra.trees.min_heap.MinHeap.clear>`_,Clears the whole Min Heap instance.,O(1),O(1)
`to_list() <min_heap.html#extra.trees.min_heap.MinHeap.to_list>`_,Converts the Min Heap instance to list.,O(1),O(1)
`get_min() <min_heap.html#extra.trees.min_heap.MinHeap.get_min>`_,Gets the minimum number in the Min Heap.,O(1),O(1)
`get_max() <min_heap.html#extra.trees.min_heap.MinHeap.get_max>`_,Gets the maximum number in the Min Heap.,O(n),O(n)
`insert() <min_heap.html#extra.trees.min_heap.MinHeap.insert>`_,Inserts a certain value to the Min Heap.,O(h),O(h)
`remove() <min_heap.html#extra.trees.min_heap.MinHeap.remove>`_,Removes a certain value from the Min Heap.,O(h),O(h)
`remove_min() <min_heap.html#extra.trees.min_heap.MinHeap.remove_min>`_,Removes the minimum value from the Min Heap.,O(1),O(1)
`remove_max() <min_heap.html#extra.trees.min_heap.MinHeap.remove_max>`_,Removes a certain value from the Min Heap.,O(n),O(n)
