Method,Description,Worst-case,Optimal
`is_empty() <avl.html#extra.trees.avl.AVL.is_empty>`_,Checks if the AVL tree is empty.,O(1),O(1)
`__len__() <avl.html#extra.trees.avl.AVL.__len_\_>`_,Returns the number of the nodes of the AVL Tree.,O(1),O(1)
`__repr__() <avl.html#extra.trees.avl.AVL.__repr_\_>`_,Represents the AVL Tree as a string.,O(n),O(n)
`__iter__() <avl.html#extra.trees.avl.AVL.__iter_\_>`_,Iterates over the AVL Tree.,O(n),O(n)
`__contains__() <avl.html#extra.trees.avl.AVL.__contains_\_>`_,Checks the existence of the given item.,O(h),O(h)
`get_height() <avl.html#extra.trees.avl.AVL.get_height>`_,Gets the AVL Tree's height.,O(n),O(1)
`get_depth() <avl.html#extra.trees.avl.AVL.get_depth>`_,Gets the AVL Tree's depth.,O(n),O(1)
`get_nodes_per_level() <avl.html#extra.trees.avl.AVL.get_nodes_per_level>`_,Returns a list of all nodes per level.,O(n),O(n)
`is_balanced() <avl.html#extra.trees.avl.AVL.is_balanced>`_,Checks if the AVL Tree is balanced.,O(n),O(1)
`is_perfect() <avl.html#extra.trees.avl.AVL.is_perfect>`_,Checks if the AVL Tree is perfect.,O(n),O(1)
`is_strict() <avl.html#extra.trees.avl.AVL.is_strict>`_,Checks if the AVL Tree is strict.,O(n),O(1)
`count_leaf_nodes() <avl.html#extra.trees.avl.AVL.count_leaf_nodes>`_,Counts all leaf nodes in the tree.,O(n),O(n)
`clear() <avl.html#extra.trees.avl.AVL.clear>`_,Clears the whole AVL tree instance.,O(1),O(1)
`to_list() <avl.html#extra.trees.avl.AVL.to_list>`_,Converts the AVL tree instance to a normal list.,O(n),O(n)
`traverse() <avl.html#extra.trees.avl.AVL.traverse>`_,Traverses the AVL Tree based on given method.,O(n),O(n)
`preorder_traverse() <avl.html#extra.trees.avl.AVL.preorder_traverse>`_,Traverses the AVL Tree in an pre-order manner.,O(n),O(n)
`inorder_traverse() <avl.html#extra.trees.avl.AVL.inorder_traverse>`_,Traverses the AVL Tree in an in-order manner.,O(n),O(n)
`postorder_traverse() <avl.html#extra.trees.avl.AVL.postorder_traverse>`_,Traverses the AVL Tree in an post-order manner.,O(n),O(n)
`breadth_first_traverse() <avl.html#extra.trees.avl.AVL.breadth_first_traverse>`_,Traverses the AVL Tree level by level.,O(n),O(n)
`depth_first_traverse() <avl.html#extra.trees.avl.AVL.depth_first_traverse>`_,Traverses the AVL Tree in an pre-order manner.,O(n),O(n)
`get_min() <avl.html#extra.trees.avl.AVL.get_min>`_,Gets the minimum number in the AVL Tree.,O(h),O(h)
`get_max() <avl.html#extra.trees.avl.AVL.get_max>`_,Gets the maximum number in the AVL Tree.,O(h),O(h)
`insert() <avl.html#extra.trees.avl.AVL.insert>`_,Inserts a certain value to the AVL Tree.,O(h),O(h)
`remove() <avl.html#extra.trees.avl.AVL.remove>`_,Removes a certain value from the AVL Tree.,O(h),O(h)
