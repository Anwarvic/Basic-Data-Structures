Method,Description,Worst-case,Optimal
is_empty(),Checks if binary tree is empty.,O(1),O(1)
__len__(),Returns the number of nodes of the binary tree.,O(n),O(1)
__repr__(),Represents the binary tree as a string.,O(n),O(n)
__iter__(),Iterates over the binary tree instance.,O(n),O(n)
__contains__(),Checks the existence of the given item.,O(n),O(n)
get_height(),Gets the binary tree's height.,O(n),O(n)
get_depth(),Gets the binary tree's depth.,O(1),O(1)
get_nodes_per_level(),Returns a list of all nodes per level.,O(n),O(n)
is_balanced(),Checks if the binary tree is balanced.,O(n),O(n)
is_perfect(),Checks if the binary tree is perfect.,O(n),O(n)
is_strict(),Checks if the binary tree is strict.,O(n),O(n)
count_leaf_nodes(),Counts all leaf nodes in the binary tree.,O(n),O(n)
clear(),Clears the whole binary tree instance.,O(1),O(1)
to_list(),Converts the bianry tree instance to a normal list.,O(n),O(n)
traverse(),Traverses the binary tree based on given method.,O(n),O(n)
preorder_traverse(),Traverses the binary tree in an pre-order manner.,O(n),O(n)
inorder_traverse(),Traverses the binary tree in an in-order manner,O(n),O(n)
postorder_traverse(),Traverses the binary tree in an post-order manner.,O(n),O(n)
breadth_first_traverse(),Traverses the binary tree level by level.,O(n),O(n)
depth_first_traverse(),Traverses the binary tree in an pre-order manner.,O(n),O(n)
